<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Emacs on </title>
    <link>https://enjoy61.github.io/docs/%E5%88%86%E4%BA%AB/emacs/</link>
    <description>Recent content in Emacs on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 11 Jun 2023 01:02:04 +0000</lastBuildDate><atom:link href="https://enjoy61.github.io/docs/%E5%88%86%E4%BA%AB/emacs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>org-mode</title>
      <link>https://enjoy61.github.io/docs/%E5%88%86%E4%BA%AB/emacs/org-mode/</link>
      <pubDate>Sat, 10 Jun 2023 23:56:27 +0000</pubDate>
      
      <guid>https://enjoy61.github.io/docs/%E5%88%86%E4%BA%AB/emacs/org-mode/</guid>
      <description>便签 # The Org Manual 样式 # 删除线 # Content +Content+ 下划线 # Content _Content_ 文本块 # Content =test= ~test~ 斜体 # Content /Content/ 加粗 # Content *Content* 分隔线 # ----- 标题 # 标题间移动 # - 上一个 C-c C-p 下一个 C-c C-n 去到上级标题 # C-c C-u 同级标题间移动 # - 上一个 C-c C-b 下一个 C-c C-f 创建标题 # - 同级标题 C-RET 同级标题 / 列表项 M-RET 同级TODO标题 M-S-RET 标题、列表项转换 # - 标题转换为列表项 C-c - 文本、列表项转换为标题 C-c * 标题和列表项升降级 # - 降级 M-LEFT 升级 M-RIGHT TODO标题状态切换 # &amp;gt; 普通标题 &amp;gt; TODO &amp;gt; DONE 所属标题状态切换 # C-c C-t 处于标题行 # - S-LEFT 逆向 S-RIGHT 逆向 文本显示 # 进入预览模式，显示一级标题 # C-c C-j 标题展开 # &amp;gt; 只展开第一个一级标题 &amp;gt; 展开所有标题 &amp;gt; 展开全部内容 S-TAB 子树 # - 删除子树 C-c C-x C-w 拷贝子树 C-c C-x M-w 降级 M-S-LEFT 升级 M-S-RIGHT 模板 # Structure Templates 插入模板 # - 快捷键 C-c C-, 函数 org-insert-structure-template 不再支持 &amp;lt;s TAB 模板样式 # 代码块 # #include &amp;lt;iostream&amp;gt; using namespace std; int main() { cout &amp;lt;&amp;lt; &amp;quot;Hello World!</description>
    </item>
    
    <item>
      <title>EmacsLisp</title>
      <link>https://enjoy61.github.io/docs/%E5%88%86%E4%BA%AB/emacs/emacslisp/</link>
      <pubDate>Sat, 12 Aug 2023 23:48:25 +0000</pubDate>
      
      <guid>https://enjoy61.github.io/docs/%E5%88%86%E4%BA%AB/emacs/emacslisp/</guid>
      <description>便签 # Manual 文件 # 打开文件 # (find-file &amp;quot;path/to/file&amp;quot;) 使用打开链接的方式，打开指定文件 # (org-open-file &amp;quot;path/to/file&amp;quot;) 打开链接 # C-c C-o (org-open-at-point) 文本 # 在光标处插入 # (insert &amp;quot;Hello&amp;quot;) 读取输入 # (read-string &amp;quot;Promots: &amp;quot;) 搜索并替换 # 字符串replace-string # replace-string会跳过链接匹配 全文搜索并替换 # (while (search-forward &amp;quot;file:tt.txt&amp;quot; nil t) (replace-match &amp;quot;file:pp.txt&amp;quot; nil t)) 字符串查找 # search-backward # (search-backward &amp;quot;=&amp;quot;) ;; 查找成功返回t (search-backward &amp;quot;[[ue:&amp;quot; nil t) 正则查找 # re-search-forward # 目的字符串 [[ue:UE_5.1/Engine/Source/Runtime/Core/Public/Math/Interval.h= 正则匹配 (re-search-forward (rx &amp;quot;[[ue:&amp;quot; (group (0+ (not &amp;quot;]&amp;quot;))) &amp;quot;][虚幻引擎:&amp;quot; (group (0+ (not &amp;quot;]&amp;quot;))) &amp;quot;]]&amp;quot; )) ;; 匹配返回t (re-search-forward (rx &amp;quot;[[ue:&amp;quot; (group (0+ (not &amp;quot;]&amp;quot;))) &amp;quot;][虚幻引擎:&amp;quot; (group (0+ (not &amp;quot;]&amp;quot;))) &amp;quot;]]&amp;quot; ) nil t) 复制 # (copy-region-as-kill (point-min) (point-max)) 光标 # 光标所在位置 # (point) 去到指定位置 # (goto-char (point)) 光标信息 # (what-cursor-position) 记忆光标位置, 处理结束恢复 # (save-excursion (insert &amp;quot;hello&amp;quot;)) 获取光标间字符串 # (buffer-substring-no-properties (point-min) (point-max)) 缓冲区 # 获取buffer内容 # (buffer-string) 在临时buffer中做处理 # (with-temp-buffer (insert &amp;quot;hello&amp;quot;)) 保存buffer # (save-buffer) 关闭buffer # (kill-buffer) 获取buffer对应的文件名 # (buffer-name) 获取给定文件的buffer # (get-buffer (buffer-name)) 控制语句 # 条件控制语句 # if # 缩进作为true和false的分支 各一条语句 (if (= 3 5) (message &amp;quot;equal&amp;quot;) (message &amp;quot;not equal&amp;quot;)) when：cond为true时继续 # (when (&amp;lt; 3 5) (setq ooout &#39;(&amp;quot;less&amp;quot;)) (message &amp;quot;%s&amp;quot; (cons &amp;quot;multi&amp;quot; ooout))) unless：cond为false时继续 # (unless (&amp;gt; 3 4) (setq ooout &#39;(&amp;quot;false&amp;quot; &amp;quot;3 &amp;lt; 4&amp;quot; &amp;quot;is&amp;quot; &amp;quot;true&amp;quot; &amp;quot;!</description>
    </item>
    
  </channel>
</rss>
