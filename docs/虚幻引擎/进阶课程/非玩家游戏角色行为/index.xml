<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>非玩家游戏角色行为 on </title>
    <link>https://enjoy61.github.io/docs/%E8%99%9A%E5%B9%BB%E5%BC%95%E6%93%8E/%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B/%E9%9D%9E%E7%8E%A9%E5%AE%B6%E6%B8%B8%E6%88%8F%E8%A7%92%E8%89%B2%E8%A1%8C%E4%B8%BA/</link>
    <description>Recent content in 非玩家游戏角色行为 on </description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 19 Oct 2023 21:26:29 +0000</lastBuildDate><atom:link href="https://enjoy61.github.io/docs/%E8%99%9A%E5%B9%BB%E5%BC%95%E6%93%8E/%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B/%E9%9D%9E%E7%8E%A9%E5%AE%B6%E6%B8%B8%E6%88%8F%E8%A7%92%E8%89%B2%E8%A1%8C%E4%B8%BA/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>让NPC移动到指定位置</title>
      <link>https://enjoy61.github.io/docs/%E8%99%9A%E5%B9%BB%E5%BC%95%E6%93%8E/%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B/%E9%9D%9E%E7%8E%A9%E5%AE%B6%E6%B8%B8%E6%88%8F%E8%A7%92%E8%89%B2%E8%A1%8C%E4%B8%BA/%E8%AE%A9npc%E7%A7%BB%E5%8A%A8%E5%88%B0%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE/</link>
      <pubDate>Thu, 19 Oct 2023 19:05:23 +0000</pubDate>
      
      <guid>https://enjoy61.github.io/docs/%E8%99%9A%E5%B9%BB%E5%BC%95%E6%93%8E/%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B/%E9%9D%9E%E7%8E%A9%E5%AE%B6%E6%B8%B8%E6%88%8F%E8%A7%92%E8%89%B2%E8%A1%8C%E4%B8%BA/%E8%AE%A9npc%E7%A7%BB%E5%8A%A8%E5%88%B0%E6%8C%87%E5%AE%9A%E4%BD%8D%E7%BD%AE/</guid>
      <description>说明 # AI Character / Controller / Navmesh 创建类 # NPC游戏角色 - 基类 STUBaseCharacter Public 路径 AI/ STUAICharacter 相应控制器 - 基类 AIController Public 路径 AI/ STUAIController 添加到头文件搜索路径 ShootThemUp: ShootThemUp.Build.cs PublicIncludePaths.AddRange(new string[] { &amp;quot;ShootThemUp/Public/Player&amp;quot;, &amp;quot;ShootThemUp/Public/Components&amp;quot;, &amp;quot;ShootThemUp/Public/Dev&amp;quot;, &amp;quot;ShootThemUp/Public/Weapon&amp;quot;, &amp;quot;ShootThemUp/Public/UI&amp;quot;, &amp;quot;ShootThemUp/Public/Animations&amp;quot;, &amp;quot;ShootThemUp/Public/Pickups&amp;quot;, &amp;quot;ShootThemUp/Public/Weapon/Components&amp;quot;, &amp;quot;ShootThemUp/Public/AI&amp;quot; }); 创建文件夹 Content/AI 创建基于STUAICharacter和STUAIController的蓝图类, 添加前缀BP_ 配置BP_STUAICharacter # 参照BP_STUBaseCharacter 显示修改过的属性 设置属性时善用复制粘贴 对BP_AIBaseCharacter进行修改 生命值文本 网格体 设置动画蓝图类 健康组件 武器组件 允许该游戏角色直接添加到场景中或动态生成; 设置控制器类型 移除添加到场景中的BP_STUBaseCharacter, 添加BP_AIBaseCharacter 运行游戏, 正常生成NPC和AI控制器 让NPC移动到指定位置 # 设置地板大小 添加Actor到场景一角 Place Actors &amp;gt; Basic &amp;gt; Actor 双击打开BP_STUAIController 添加节点AIMoveTo, 在BeginPlay之后执行: 将控制器当前控制的游戏角色移动到目的地, 通过给出目的地座标或指示Actor 添加NavMeshBoundsVolume: 覆盖NPC移动区域 Place Actors &amp;gt; Volumes &amp;gt; NavMeshBoundsVolume 设置NavMeshBoundsVolume大小: 高度管控层级; 与场景中的其他网格体有交互 Details &amp;gt; Brush Settings 绿色高亮显示导航网格体的覆盖区域, 按下 P 显示 / 隐藏 Unreal Editor &amp;gt; Preference &amp;gt; General &amp;gt; Keyboard Shortcuts 优化榴弹爆炸特效 # Content/VFX/Projectile 烟雾和火球无法扩散, 将烟雾效果扩大, 火球效果缩小 NE_Burst NE_Fireball NE_Flash NE_Smoke Properties使能Local Space NE_Fireball # 分布半径 NE_Smoke # 粒子数 分布半径 NS_ProjectileExplosion # 优化步枪击中特效 # NE_CoreFast # NE_ShortBurst1 # NE_ShortBurst2 # </description>
    </item>
    
    <item>
      <title>初识行为树和黑板</title>
      <link>https://enjoy61.github.io/docs/%E8%99%9A%E5%B9%BB%E5%BC%95%E6%93%8E/%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B/%E9%9D%9E%E7%8E%A9%E5%AE%B6%E6%B8%B8%E6%88%8F%E8%A7%92%E8%89%B2%E8%A1%8C%E4%B8%BA/%E5%88%9D%E8%AF%86%E8%A1%8C%E4%B8%BA%E6%A0%91%E5%92%8C%E9%BB%91%E6%9D%BF/</link>
      <pubDate>Thu, 19 Oct 2023 23:16:00 +0000</pubDate>
      
      <guid>https://enjoy61.github.io/docs/%E8%99%9A%E5%B9%BB%E5%BC%95%E6%93%8E/%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B/%E9%9D%9E%E7%8E%A9%E5%AE%B6%E6%B8%B8%E6%88%8F%E8%A7%92%E8%89%B2%E8%A1%8C%E4%B8%BA/%E5%88%9D%E8%AF%86%E8%A1%8C%E4%B8%BA%E6%A0%91%E5%92%8C%E9%BB%91%E6%9D%BF/</guid>
      <description>说明 # Behavior Tree / Blackboard 在控制器对游戏角色行为逻辑进行描述 数学建模, 直接 非循环 图表, 可能的行为作为节点 虚幻引擎提供行为树编辑器使数学模型可视化 行为树是游戏角色的大脑: 设置了一系列的规则, 迁移条件 Transition , 和NPC状态 黑板作为数据库: 一系列变量, 当我们在代码中将其设置为不同值, 行为树会作出对应反应 创建行为树资产和黑板资产 # Content/AI 右键, Artificial Intelligence &amp;gt; Behavior Tree , 命名为BT_STUCharacter 右键, Artificial Intelligence &amp;gt; Blackboard , 命名为BB_STUCharacter 使用行为树资产 # 双击打开BT_STUCharacter, 对游戏角色行为逻辑进行配置 行为树由控制节点组成, 任务作为叶子节点; 任务即游戏角色的直接动作 初始只有一个根节点, 作为行为树的入口 第二层有三个选项 - Sequence 按次序执行的多个任务序列 Selector Simple Parallel 第三层可以选任务 - MoveTo 找到路径去到指定位置; MoveAITo的另一种表示 Wait 游戏角色暂停指定秒数 添加节点: Sequence 添加任务: MoveTo 在细节面板进行配置 Blackboard &amp;gt; Blackboard Key : 决定世界座标系的某个位置, 或者游戏角色将要移动到的Actor 点击图表的空白处会显示细节面板, 设置黑板资产 使用黑板资产 # 通过 New Key 按钮添加各种类型变量 添加两个 Vector 类型变量: Location1和Location2; 将在这两点间移动 设置行为树资产 # 选中 MoveTo 节点, 可以在 Details &amp;gt; Blackboard &amp;gt; Blackboard Key 看到刚刚添加的变量, 选择Location1作为目的地 添加任务: Wait; 设置秒数为2 添加任务: MoveTo; 选择Location2作为目的地 添加任务: Wait; 设置秒数为2 当前NPC逻辑: &amp;gt; 去到Location1 &amp;gt; 等待2s &amp;gt; 去到Location2 &amp;gt; 等待2s; 循环 行为树从上到下、从左到右顺序执行; 左边的优先级更高 任务具有执行状态: 是否成功完成; 成功则运行下一个任务, 否则中止 运行行为树; 设置黑板中变量的位置值 # 移除BP_STUAIController蓝图中的逻辑 添加节点: RunBehaviorTree; 在BeginPlay之后执行; 设置行为树资产 设置变量值: 对Location1和Location2进行设置 添加节点: GetBlackboard; 获取黑板指针 添加节点: SetValueAsVector; 对黑板中的变量进行设置 添加节点: MakeLiteralName; 给出变量名 查看 # 在场景另一角添加Actor, 指示Location2 将Actor1和Actor2的座标作为Location1和Location2的值 保持行为树资产打开, 可以看见行为树逻辑执行的过程 按下 &#39; 显示调试信息; 按下小写键盘的数字关闭 / 打开AI该类别调试信息 切换到NPC # Shift-F1 释放鼠标 在世界大纲选中BP_STUAICharacter 按下 &#39; Active Task : NPC当前执行的任务 设置AI调试信息相关热键 # Hotkey 显示 / 关闭AI调试窗口 : Project Settings &amp;gt; Engine &amp;gt; Gameplay Debugger &amp;gt; Input &amp;gt; Activation Key ; 可以更换为F10 显示 / 关闭调试信息: Project Settings &amp;gt; Engine &amp;gt; Gameplay Debugger &amp;gt; Extensions &amp;gt; ToggleMessages ; 设置为Ctrl + Z; 原先和切换应用快捷键重复, 因而无法生效 释放鼠标 # 当运行模式为视口和新建编辑器窗口时, 可按下F8释放鼠标控制 </description>
    </item>
    
    <item>
      <title>在C&#43;&#43;中创建任务类型</title>
      <link>https://enjoy61.github.io/docs/%E8%99%9A%E5%B9%BB%E5%BC%95%E6%93%8E/%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B/%E9%9D%9E%E7%8E%A9%E5%AE%B6%E6%B8%B8%E6%88%8F%E8%A7%92%E8%89%B2%E8%A1%8C%E4%B8%BA/%E5%9C%A8c&#43;&#43;%E4%B8%AD%E5%88%9B%E5%BB%BA%E4%BB%BB%E5%8A%A1%E7%B1%BB%E5%9E%8B/</link>
      <pubDate>Fri, 20 Oct 2023 20:45:42 +0000</pubDate>
      
      <guid>https://enjoy61.github.io/docs/%E8%99%9A%E5%B9%BB%E5%BC%95%E6%93%8E/%E8%BF%9B%E9%98%B6%E8%AF%BE%E7%A8%8B/%E9%9D%9E%E7%8E%A9%E5%AE%B6%E6%B8%B8%E6%88%8F%E8%A7%92%E8%89%B2%E8%A1%8C%E4%B8%BA/%E5%9C%A8c&#43;&#43;%E4%B8%AD%E5%88%9B%E5%BB%BA%E4%BB%BB%E5%8A%A1%E7%B1%BB%E5%9E%8B/</guid>
      <description>说明 # AI Task 在C++中生成随机点, 让NPC移动到随机生成位置 创建任务类型 # 创建蓝图任务类型的方法 BT_STUCharacter 点击 New Task C++ - 基类 BTTaskNode 路径 AI/Tasks/ Public STUNextLocationTask ShootThemUp: ShootThemUp.Build.cs 修改头文件搜索路径 PublicIncludePaths.AddRange(new string[] { &amp;quot;ShootThemUp/Public/Player&amp;quot;, &amp;quot;ShootThemUp/Public/Components&amp;quot;, &amp;quot;ShootThemUp/Public/Dev&amp;quot;, &amp;quot;ShootThemUp/Public/Weapon&amp;quot;, &amp;quot;ShootThemUp/Public/UI&amp;quot;, &amp;quot;ShootThemUp/Public/Animations&amp;quot;, &amp;quot;ShootThemUp/Public/Pickups&amp;quot;, &amp;quot;ShootThemUp/Public/Weapon/Components&amp;quot;, &amp;quot;ShootThemUp/Public/AI&amp;quot;, &amp;quot;ShootThemUp/Public/AI/Tasks&amp;quot; }); 添加依赖模块GameplayTasks和NavigationSystem PublicDependencyModuleNames.AddRange(new string[] { &amp;quot;Core&amp;quot;, &amp;quot;CoreUObject&amp;quot;, &amp;quot;Engine&amp;quot;, &amp;quot;InputCore&amp;quot;, &amp;quot;Niagara&amp;quot;, &amp;quot;PhysicsCore&amp;quot;, &amp;quot;GameplayCameras&amp;quot;, &amp;quot;GameplayTasks&amp;quot;, &amp;quot;NavigationSystem&amp;quot; }); 实现任务: 在给定半径圆形范围内生成随机点并设置变量 # 添加构造函数 ShootThemUp: AI/Tasks/STUNextLocationTask.h public USTUNextLocationTask(); 执行任务时调用ExecuteTask 覆写 ShootThemUp: AI/Tasks/STUNextLocationTask.h public virtual EBTNodeResult::Type ExecuteTask(UBehaviorTreeComponent &amp;amp;OwnerComp, uint8 *NodeMemory) override; 添加属性 半径和黑板变量 ShootThemUp: AI/Tasks/STUNextLocationTask.</description>
    </item>
    
  </channel>
</rss>
